USE `SMS_API_V2`;

START TRANSACTION;

-- TABLE HISTORY INVOICE FEATURE --

CREATE TABLE `INVOICE_HISTORY` (
  `INVOICE_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `PROFILE_ID` int(10) unsigned NOT NULL,
  `INVOICE_NUMBER` int(10) unsigned NOT NULL,
  `START_DATE` date DEFAULT NULL,
  `DUE_DATE` date DEFAULT NULL,
  `REF_NUMBER` varchar(50) DEFAULT NULL,
  `STATUS` tinyint(4) NOT NULL DEFAULT '0' COMMENT '0 = pending\n1 = paid',
  `FILE_PATH` varchar(250) DEFAULT NULL,
  `CREATED_AT` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_AT` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`INVOICE_ID`),
  UNIQUE KEY `INVOICE_ID_UNIQUE` (`INVOICE_ID`),
  UNIQUE KEY `INVOICE_NUMBER_UNIQUE` (`INVOICE_NUMBER`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


-- TABLE BANK INVOICE FEATURE --

CREATE TABLE `INVOICE_BANK` (
  `BANK_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BANK_NAME` varchar(150) NOT NULL,
  `ADDRESS` varchar(250) DEFAULT NULL,
  `ACCOUNT_NAME` varchar(150) NOT NULL,
  `ACCOUNT_NUMBER` varchar(30) NOT NULL,
  PRIMARY KEY (`BANK_ID`),
  UNIQUE KEY `BANK_ID_UNIQUE` (`BANK_ID`),
  UNIQUE KEY `ACCOUNT_NUMBER_UNIQUE` (`ACCOUNT_NUMBER`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


-- TABLE PRODUCT INVOICE FEATURE --

CREATE TABLE `INVOICE_PRODUCT` (
  `PRODUCT_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `PRODUCT_NAME` varchar(150) NOT NULL,
  `PERIOD` date DEFAULT NULL,
  `UNIT_PRICE` decimal(10,2) unsigned DEFAULT '0.00',
  `QTY` int(10) unsigned DEFAULT '0',
  `USE_REPORT` tinyint(4) NOT NULL DEFAULT '0',
  `REPORT_NAME` varchar(100) DEFAULT NULL,
  `USER_API_REPORT` varchar(100) DEFAULT NULL,
  `OWNER_TYPE` varchar(10) NOT NULL COMMENT 'If OWNER_TYPE has a value "PROFILE" means the product has a relation with INVOICE_PROFILE table\nelse if OWNER_TYPE has a value "HISTORY" means the product has a relation with INVOICE_HISTORY table',
  `OWNER_ID` int(10) unsigned NOT NULL COMMENT 'This column is a foreign_key from table that describe in OWNER_TYPE column',
  PRIMARY KEY (`PRODUCT_ID`),
  UNIQUE KEY `PRODUCT_ID_UNIQUE` (`PRODUCT_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;


-- TABLE PROFILE INVOICE FEATURE --

CREATE TABLE `INVOICE_PROFILE` (
  `PROFILE_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CLIENT_ID` int(11) NOT NULL,
  `BANK_ID` int(10) unsigned NOT NULL,
  `CREATED_AT` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_AT` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`PROFILE_ID`),
  UNIQUE KEY `CLIENT_ID_UNIQUE` (`CLIENT_ID`),
  UNIQUE KEY `PROFILE_ID_UNIQUE` (`PROFILE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


-- TABLE SETTING INVOICE FEATURE --

CREATE TABLE `INVOICE_SETTING` (
  `SETTING_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `PAYMENT_PERIOD` int(11) NOT NULL DEFAULT '3' COMMENT 'Payment period in days',
  `AUTHORIZED_NAME` varchar(45) DEFAULT NULL,
  `AUTHORIZED_POSITION` varchar(45) DEFAULT NULL,
  `APPROVED_NAME` varchar(45) DEFAULT NULL,
  `APPROVED_POSITION` varchar(45) DEFAULT NULL,
  `NOTE_MESSAGE` text,
  `INVOICE_NUMBER_PREFIX` varchar(45) NOT NULL,
  `LAST_INVOICE_NUMBER` int(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`SETTING_ID`),
  UNIQUE KEY `SETTING_ID_UNIQUE` (`SETTING_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


-- UPDATE TABLE CLIENT TO ADD NEW COLUMN --

ALTER TABLE CLIENT ADD CUSTOMER_ID VARCHAR(30) NOT NULL AFTER CLIENT_ID ;
ALTER TABLE CLIENT ADD CONTACT_ADDRESS VARCHAR(200) AFTER CONTACT_PHONE ;

COMMIT;
